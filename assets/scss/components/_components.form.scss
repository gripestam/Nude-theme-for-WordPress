/* ==========================================================================
   FORM ELEMENTS
   ========================================================================== */
form {
	input[type="text"], 
	input[type="email"], 
	input[type="url"],
	input[type="password"],
	input[type="file"],
	input[type="number"],
	input[type="tel"],
	input.search, 
	textarea {
		border: 1px solid $color__gray--light;
		padding: .5rem .5rem 0.35rem;
    	vertical-align: bottom;
    	width: 100%;
    
    	@media only screen and (min-width: 48em) {
			width: auto;
		}
		
		
		&.invalid {
			background: rgba(217, 83, 79, 0.1);
			border: 1px solid $color__danger;
		}
		
	}
	
	// Error handling (used with .invalid above)
	.error__list {
		font-size: 1rem;
		list-style: none;
		margin: .2rem 0 .5rem;
		padding: 0;
		
		li {
			color: $color__danger;
		}
	}
	
	input[type="checkbox"], 
	input[type="radio"] {
		margin-right: .5rem;
		
		& + label {
			display: inline;
			margin-right: 1rem;
		}
	}
	
	input:focus,
	textarea:focus {
		border: 1px solid $color__brand;
		outline:none; 
	}
	input[type="button"]:focus,
	input[type="reset"]:focus,
	input[type="submit"]:focus {
		border: none;
	}
	
	label {
		display: block;
	}
	
	select {
		//border: 1px solid $color__black;
		//height: 2rem;
	}
}




/* 
 *	il= interactive label
 *	Use this with Javascript to achieve desired effect. Input elements cannot be targeted with :empty
 *	therefore we need to replace :focus below with proper add/removeClass with JS to target both focus
 *	state and whether an input field is filled out. 
 */
form {
	.form-element-il {
		display: block;
		margin: 2rem 0 1rem;
		position: relative;
		
		input, textarea {
			
			&:focus + label {
				left: 0;
				top: -18px;
				font-size: 14px;
				color: $color__brand;
			}
		}
		label {
			display: block;
			color: $color__gray--light;
			left: calc(.5rem + 1px);
			position: absolute;
			pointer-events: none;
			top: calc(.5rem + 2px);
			transition: .2s ease all;
			
			@media only screen and (min-width: 64em) {
				top: .5rem;
			}
		}
		
		@media only screen and (min-width: 48em) {
			display: inline-block;
		}
	}
}